package nl.numblock.util.debug {	import nl.numblock.DebugSettings;			import flash.events.EventDispatcher;	
	import flash.display.DisplayObject;		import flash.display.Loader;	
	import flash.events.ProgressEvent;		import flash.events.Event;		import flash.display.LoaderInfo;		/**	 * @author Peter	 * TODO Really no way to extend LoaderInfo	 */	public class DebugLoaderInfo extends EventDispatcher 	{		private var _bytesLoaded:uint;		private var _bytesTotal:uint;		private var _loader:Loader;		private var _url:String;		private var _content:DisplayObject;		public function DebugLoaderInfo(bytesLoaded:uint = 0, bytesTotal:uint = 100)		{			super();			_bytesLoaded = bytesLoaded;			_bytesTotal = bytesTotal;		}		public function get bytesLoaded():uint		{			return _bytesLoaded;		}		public function set bytesLoaded(newValue:uint):void		{			_bytesLoaded = newValue;						dispatchEvent(new ProgressEvent(ProgressEvent.PROGRESS,false,false,_bytesLoaded,_bytesTotal));			if(_bytesLoaded >= _bytesTotal)				dispatchEvent(new Event(Event.COMPLETE));		}		public function get bytesTotal():uint		{			return _bytesTotal;		}		public function set bytesTotal(newValue:uint):void		{			_bytesTotal = newValue;		}				public function get loader():Loader		{			return _loader;		}		public function set loader(newValue:Loader):void		{			_loader = newValue;		}		public function get url():String		{			return _url;		}		public function set url(newValue:String):void		{			_url = newValue;			dispatchEvent(new Event(Event.OPEN));		}				public function get content():DisplayObject		{			return _content;		}		public function set content(newValue:DisplayObject):void		{			_content = newValue;		}	}}